{"mappings":"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","sources":["src/app/HVC.ts","src/app/hvm/Calculadora.ts","src/app/hvm/Chico.ts","src/app/hvm/EPI.ts","src/app/hvm/FolhaDeSaida.ts","src/app/hvm/Gaveteiro.ts","src/app/utils/sleep.ts","src/app/hvm/HVM.ts","src/app/hvm/PortaCartoes.ts","src/app/syntax/language/DrawerLanguage.ts","src/app/syntax/Syntax.ts","src/app/syntax/tokens/DLToken.ts","src/app/syntax/tokens/Token.ts"],"sourcesContent":["import Calculadora from \"./hvm/Calculadora\"\nimport Chico from \"./hvm/Chico\"\nimport EPI from \"./hvm/EPI\"\nimport FolhaDeSaida from \"./hvm/FolhaDeSaida\"\nimport Gaveteiro from \"./hvm/Gaveteiro\"\nimport HVM from \"./hvm/HVM\"\nimport PortaCartoes from \"./hvm/PortaCartoes\"\n\nclass HVC {\n\n    private code\n    private HVM\n    private isDebug = false\n    private output?:(out:string) => void\n    private input?:() => Promise<string>\n    \n    constructor() {\n\n        this.HVM = new HVM()\n        this.code = \"\"\n\n    }\n\n    public addEventInput(call:() => Promise<string>) {\n\n        this.input = call\n\n    }\n\n    public addEventOutput(call:(out:string) => void) {\n\n        this.output = call\n\n    }\n\n    private async runner(debug?:boolean, delay?:number) {\n\n        this.isDebug == debug ?? true\n        this.HVM = new HVM()\n        this.HVM.setDelay(delay ?? 0)\n        this.HVM.portaCartoes.entrada = this.input\n        this.HVM.folhaDeSaida.saida = this.output\n        await this.HVM.run(this.code)\n\n    }\n\n    public async run() {\n\n        await this.runner(false)\n\n    }\n\n    public async debug(delay:number) {\n        \n        await this.runner(true, delay)\n    \n    }\n\n    public finish() {\n\n        this.HVM.setState(\"ENDED\")\n\n    }\n\n    public stop() {\n\n        if (this.isDebug)\n            this.HVM.setState(\"WAIT\")\n        else\n            console.warn(\"Não é permitido parar a execução do HVM sem estar em modo de depuração\");\n\n    }\n\n    public next() {               \n\n    }\n\n    public back() {\n\n\n\n    }\n    \n    public setCode(code:string) {\n        this.code = code\n    }\n    \n    public getCode() {\n        return this.code\n    }\n\n    public getHVM() {\n\n        return this.HVM\n\n    }\n\n    public getDebug() {\n\n        return this.isDebug\n\n    }\n\n}\n\nexport {\n    HVC,\n    HVM,\n    Calculadora,\n    Chico,\n    EPI,\n    FolhaDeSaida,\n    Gaveteiro,\n    PortaCartoes\n}","export default class Calculadora {\n    \n    private acumulador = 0;\n  \n    public soma(valor:number) {\n      \n      if (valor < 0 || valor + this.acumulador > 999) \n        throw new Error(`Erro na operação ${this.acumulador} + ${valor} = ${valor + this.acumulador}, único valor aceito como resultado é entre 0-999`);\n  \n      this.acumulador += valor;\n      \n    }\n  \n    public subtraia(valor:number) {\n      \n      if (valor < 0 || valor + this.acumulador > 999) \n        throw new Error(`Erro na operação ${this.acumulador} - ${valor} = ${valor - this.acumulador}, único valor aceito como resultado é entre 0-999`);\n  \n      this.acumulador -= valor;\n\n    }\n  \n    public multiplicar(valor:number) {\n      \n      if (valor < 0 || valor + this.acumulador > 999) \n          throw new Error(`Erro na operação ${this.acumulador} * ${valor} = ${valor * this.acumulador}, único valor aceito como resultado é entre 0-999`);\n        \n      this.acumulador *= valor;\n\n    }\n  \n    public divida(valor:number) {\n\n      if (valor < 0 || valor + this.acumulador > 999) \n        throw new Error(`Erro na operação ${this.acumulador} / ${valor} = ${valor / this.acumulador}, único valor aceito como resultado é entre 0-999`);\n       \n      this.acumulador = parseInt((parseInt(this.acumulador.toString()) / parseInt(valor.toString())).toString());\n\n    }\n\n    public acumular(valor:number) {\n    \n        if(valor < 0 || valor > 999) \n          throw new Error(`Erro na escrita do valor ${valor} no gaveteiro. Apenas valores entre 0-999 são aceitos.`);\n            \n        this.acumulador = valor;\n\n        return \"sucesso\"\n    \n    }\n    \n    public getAcumulador() {\n    \n      return this.acumulador;\n    \n    }\n\n}","import HVC from \"../HVC\";\nimport Gaveteiro from \"./Gaveteiro\";\nimport EPI from \"./EPI\";\nimport Calculadora from \"./Calculadora\";\nimport FolhaDeSaida from \"./FolhaDeSaida\";\nimport PortaCartoes from \"./PortaCartoes\";\nimport HVMState from \"../state/HVMState\";\n\nexport default class Chico {\n\n    public carga(gaveteiro:Gaveteiro, portaCartao:PortaCartoes, delay:number){\n        \n        return gaveteiro.carga(portaCartao, delay);\n    }\n\n    public async proximaInstrucao(gaveteiro:Gaveteiro , epi:EPI) {\n\n        const registroAtual = epi.lerRegistro();\n        \n        epi.registrar(registroAtual + 1);\n                \n        const registro = gaveteiro.ler(registroAtual);\n\n        return registro\n     \n    }\n\n    public cpEE(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n\n        const valor = parseInt(gaveteiro.ler(endereco));\n    \n        return calculadora.acumular(valor);\n    \n    }\n\n    public cpAC(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n\n        const acumulador = calculadora.getAcumulador();\n    \n        return gaveteiro.registrar(endereco, acumulador.toString());\n    \n    }\n\n    public some(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n\n        const valor = parseInt(gaveteiro.ler(endereco));\n        \n    \n        return calculadora.soma(valor);\n    \n    }\n\n    public subtraia(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n\n        const valor = parseInt(gaveteiro.ler(endereco));\n    \n        return calculadora.subtraia(valor);\n    \n    }    \n\n    public multiplique(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n\n        const valor = parseInt(gaveteiro.ler(endereco));\n    \n        return calculadora.multiplicar(valor);\n    \n    }\n    \n    public divida(calculadora:Calculadora, gaveteiro:Gaveteiro, endereco:number) {\n    \n        const valor = parseInt(gaveteiro.ler(endereco));\n    \n        return calculadora.divida(valor);\n        \n    }\n    \n    public se(calculadora:Calculadora, epi:EPI, endereco:number) {\n    \n        if(calculadora.getAcumulador() > 0) {\n    \n            return epi.registrar(endereco);\n    \n        }\n    \n    }\n    \n    public async leia(gaveteiro:Gaveteiro, pc:PortaCartoes, endereco:number) {\n    \n        let valor = pc.lerCartao();\n\n        if (!valor) {\n\n            await pc.solicitarCartao()            \n\n            valor = pc.lerCartao()\n            \n        }\n    \n        return gaveteiro.registrar(endereco, valor as string);\n    \n    }\n    \n    public escreva(gaveteiro:Gaveteiro, fs:FolhaDeSaida, endereco:number) {\n    \n        const output = gaveteiro.ler(endereco);\n    \n        return fs.imprimir(output);\n    \n    }\n    \n    public para(epi:EPI, endereco:number) { // Ir para\n     \n        return epi.registrar(endereco);\n    \n    }\n    \n    public constante( calculadora:Calculadora, valor:number) {\n    \n        return calculadora.acumular(valor);\n    \n    }\n    \n    public pare():HVMState { //Finalizar\n\n        return \"ENDED\"\n    \n    }\n    \n\n}","export default class EPI {\n\n    private valor:number = 0;\n\n    public registrar(registro: number) {\n\n        if (registro < 0) \n            throw new Error(\"Erro de sobrecarga da pilha, limite de 100 registros\");\n\n        this.valor = registro;\n        \n    }\n\n    public lerRegistro(): number {\n        return this.valor;\n    }\n\n}","export default class FolhaDeSaida {\n\n    public saida?:(out:string) => void\n    \n    public imprimir(texto: string) {\n\n        if (this.saida)  {\n\n            this.saida(texto)\n\n            return\n\n        }\n        throw new Error(\"Nenhuma implementação de saída encontrada\")\n\n    }\n}","import { sleep } from \"../utils/sleep\";\nimport PortaCartoes from \"./PortaCartoes\";\n\nexport default class Gaveteiro {\n\n    private ultimoRestrito:number;\n    private gavetas:string[];\n\n    constructor(max_gavetas:number = 100) {\n\n      this.gavetas = new Array<string>(max_gavetas)\n      this.ultimoRestrito = 0\n\n    }\n\n    public getGavetas() {\n\n      return this.gavetas\n\n    }\n\n    public async carga(portaCartao:PortaCartoes, delay:number){\n      \n      let index = 0\n      let final = false;\n\n      while(!final) {\n\n        if (delay > 0)\n          await sleep(delay);\n        \n        const cartao = portaCartao.lerCartao()\n        \n        if (cartao) {\n\n          this.registrar(index, cartao)\n          \n          final = cartao == \"000\"\n\n        } else\n          throw new Error(\"Falha na carga do porta cartões para gaveteiro\");\n\n        index++\n\n      }\n\n      this.ultimoRestrito = index\n        \n    }\n  \n    public registrar(endereco: number, valor: string) {\n\n      if(endereco + 1 >= this.gavetas.length) {\n\n        throw new Error(`Erro de sobrecarga de gavetas, limite de ${this.gavetas.length} registros`)\n\n      } else {\n        \n\n        if((endereco < this.ultimoRestrito) && this.ultimoRestrito > 0){\n            const conteudo = this.ler(endereco);\n            throw new Error(`Erro tentativa de sobrescrita de gaveta que armazena código fonte conteúdo da gaveta(${endereco}): ${conteudo}`);\n        }\n\n        const numeric_value = parseInt(valor)\n\n        if (numeric_value < 0 || numeric_value > 999)\n          throw new Error(`Valor invalido de escrita na gaveta [${endereco}]:${numeric_value}`)\n\n      }\n\n      this.gavetas[endereco] = valor\n\n    }\n  \n    public ler(endereco: number){\n\n      if (endereco < 0 || endereco > this.gavetas.length || !this.gavetas[endereco])   \n        throw new Error(`Erro na leitura do gaveteiro no endereço ${endereco}, tentativa de leitura em endereço inexistente`);\n\n\n      return this.gavetas[endereco];\n\n    }\n\n  }\n  ","function sleep(ms:number) {\n\n    return new Promise(resolve => setTimeout(resolve, ms));\n\n}\n\nexport {sleep}","import Calculadora from \"./Calculadora\"\nimport Chico from \"./Chico\"\nimport EPI from \"./EPI\"\nimport FolhaDeSaida from \"./FolhaDeSaida\"\nimport Gaveteiro from \"./Gaveteiro\"\nimport PortaCartoes from \"./PortaCartoes\"\nimport HVMState from \"../state/HVMState\"\nimport { sleep } from \"../utils/sleep\"\nimport DrawerLanguage from \"../syntax/language/DrawerLanguage\"\n\nexport default class HVM {\n\n    private state:HVMState = 'ENDED'\n\n    public calculadora = new Calculadora()\n    public chico = new Chico()\n    public epi = new EPI()\n    public folhaDeSaida = new FolhaDeSaida()\n    public gaveteiro = new Gaveteiro()\n    public portaCartoes = new PortaCartoes()\n\n    private delay = 0\n\n    public async run(code:string) {\n\n        this.portaCartoes.inserir(...code.split(/\\s+/))\n\n        this.state = \"RUNNING\"\n\n        await this.executable()\n\n    }\n\n    public async executable() {\n\n        const syntax = new DrawerLanguage()\n\n        await this.chico.carga(this.gaveteiro, this.portaCartoes, this.delay);     \n        \n        do {\n\n            if (this.delay > 0 && this.state != \"WAIT\") {\n             \n                await sleep(this.delay)\n\n            }\n\n            const token = syntax.lexer(await this.chico.proximaInstrucao(this.gaveteiro, this.epi))\n\n            const instrucao = token.getType()\n\n            const EE = token.getValue()\n\n            if (instrucao == \"0EE\")\n                this.chico.cpEE(this.calculadora, this.gaveteiro, EE)\n\n            else if (instrucao == \"1EE\")\n                this.chico.cpAC(this.calculadora, this.gaveteiro, EE)\n\n            else if (instrucao == \"2EE\")\n                this.chico.some(this.calculadora, this.gaveteiro, EE)\n\n            else if (instrucao == \"3EE\") \n                this.chico.subtraia(this.calculadora, this.gaveteiro, EE)\n\n            else if (instrucao == \"4EE\") \n                this.chico.multiplique(this.calculadora, this.gaveteiro, EE)\n                \n            else if (instrucao == \"5EE\") \n                this.chico.divida(this.calculadora, this.gaveteiro, EE)\n\n            else if (instrucao == \"6EE\")\n                this.chico.se(this.calculadora, this.epi, EE)\n\n            else if (instrucao == \"7EE\")\n                await this.chico.leia(this.gaveteiro, this.portaCartoes, EE)\n\n            else if (instrucao == \"8EE\")\n                this.chico.escreva(this.gaveteiro, this.folhaDeSaida, EE)\n\n            else if (instrucao == \"9EE\")\n                this.chico.para(this.epi, EE)\n\n            else if (instrucao == \"0-N\")\n                this.chico.constante(this.calculadora, EE)\n\n            else if(instrucao == \"000\") \n                this.state = this.chico.pare()\n\n        } while(this.state != \"ENDED\");\n\n    }\n\n    public setDelay(ms:number) {\n\n        this.delay = ms\n\n    }\n\n    public setState(state:HVMState) {\n\n        this.state = state\n\n    }\n\n}","export default class PortaCartoes {\n\n    public conteudo:string[] = []\n    public entrada?:() => Promise<string>\n\n    public async inserir(...cartoes: string[]){\n        \n        cartoes.forEach(e =>{\n            this.conteudo.push(e);\n        })\n        \n    }\n\n    public lerCartao() {\n\n        return this.conteudo.shift()\n    \n    }\n\n    public async solicitarCartao() {\n\n        if (this.entrada)  {\n\n            const input = await this.entrada()\n\n            await this.inserir(input)\n\n            return\n\n        }\n        throw new Error(\"Nenhuma implementação de entrada encontrada\")\n\n    }\n\n}","import Syntax from \"../Syntax\";\nimport DLToken from \"../tokens/DLToken\";\n\nexport default class DrawerLanguage extends Syntax {\n\n    public lexer(script: string): DLToken {\n\n        let token:DLToken | null = null\n       \n        const words = script.split(/\\s+/)\n\n        let end = false\n\n        for (let i = 0; i < words.length; i++) {\n\n            let word = words[i]\n\n            if (!end) {\n\n                if (/^000$/.test(word)) {\n                    \n                    end = true\n                    token = new DLToken(\"000\", 0)\n\n                } else if (/^0[0-9]{2}$/.test(word))\n                    token = new DLToken(\"0EE\",  parseInt(word.substring(1, 3)))\n\n                else if (/^1[0-9]{2}$/.test(word)) \n                    token = new DLToken(\"1EE\",  parseInt(word.substring(1, 3)))\n\n                else if (/^2[0-9]{2}$/.test(word))\n                    token = new DLToken(\"2EE\",  parseInt(word.substring(1, 3)))\n\n                else if (/^3[0-9]{2}$/.test(word))\n                    token = new DLToken(\"3EE\",  parseInt(word.substring(1, 3)))\n\n                else if (/^4[0-9]{2}$/.test(word))\n                    token = new DLToken(\"4EE\",  parseInt(word.substring(1, 3)))\n                    \n                else if (/^5[0-9]{2}$/.test(word))\n                    token = new DLToken(\"5EE\",  parseInt(word.substring(1, 3)))\n                \n                else if (/^6[0-9]{2}$/.test(word))\n                    token = new DLToken(\"6EE\",  parseInt(word.substring(1, 3)))\n                \n                else if (/^7[0-9]{2}$/.test(word))\n                    token = new DLToken(\"7EE\",  parseInt(word.substring(1, 3)))\n                \n                else if (/^8[0-9]{2}$/.test(word))\n                    token = new DLToken(\"8EE\",  parseInt(word.substring(1, 3)))\n                \n                else if (/^9[0-9]{2}$/.test(word)) \n                    token = new DLToken(\"9EE\",  parseInt(word.substring(1, 3)))\n                \n                else if (/^0-[0-9]{1,3}$/.test(word)) \n                    token = new DLToken(\"0-N\", parseInt((word.match(/[0-9]{1,3}$/) as RegExpMatchArray)[0]))\n\n                else\n                    throw new Error(`Erro de sintaxe, instrução ${word} não é conhecida!`);\n\n            } else {\n\n                if(/^[0-9]{3}$/.test(word))\n                    token = new DLToken(\"DATA\", parseInt(word))\n                else\n                    throw new Error(`Erro de sintaxe, dado ${word} não é valida!`);\n\n            }\n\n        }\n\n        return token as DLToken\n\n    }\n   \n}","import Token from \"./tokens/Token\";\n\nexport default abstract class Syntax {\n\n    public abstract lexer(script:string):Token\n\n}","import Token from \"./Token\";\n\nexport default class DLToken extends Token {\n\n    constructor(type:DLType, value:number) {\n        super(type, value)\n    }\n\n    public getType(): DLType {\n        return this.type as DLType\n    }\n\n}\n\ntype DLType = \"0EE\" | \"1EE\" | \"2EE\" | \"3EE\" | \"4EE\" | \"5EE\" | \"6EE\" | \"7EE\" | \"8EE\" | \"9EE\" | \"000\" | \"0-N\" | \"DATA\"","export default class Token {\n\n    protected type:string\n    protected value:number\n\n    constructor(type:string, value:number) {\n        this.type = type\n        this.value = value\n    }\n\n    public getType() {\n        return this.type\n    }\n\n    public getValue() {\n        return this.value\n    }\n    \n\n}"],"names":[],"version":3,"file":"HVC.js.map"}